# Local
# server.port=8081
# spring.h2.console.enabled=true
# spring.activemq.user=admin
# spring.activemq.password=admin
# spring.activemq.broker-url=tcp://localhost:61616?jms.redeliveryPolicy.maximumRedeliveries=1
# activemq.queue.name=AccountQueue

# path.base=/accounts
# path.getAccounts=/getAccounts
# path.getAccountById=/getAccountById/{accountId}
# path.createAccount=/createAccount
# path.deleteAccount=/deleteAccount/{accountId}
# path.updateAccount=/updateAccount/{accountId}

# url.playerManager=http://localhost:8082
# path.playerManager=/setPlaying/
# path.changeBoolean=/changeBool

# mongoBase=http://localhost:8085/accounts
# mongoGetAll=/getAccounts
# mongoGetById=/getAccountById/
# mongoUpdate=/updateAccount/
# mongoDelete=/deleteAccount/

# Docker
server.port=8081
spring.h2.console.enabled=true
spring.activemq.user=admin
spring.activemq.password=admin
spring.activemq.broker-url=tcp://activemq:61616?jms.redeliveryPolicy.maximumRedeliveries=1
activemq.queue.name=AccountQueue

path.base=/accounts
path.getAccounts=/getAccounts
path.getAccountById=/getAccountById/{accountId}
path.createAccount=/createAccount
path.deleteAccount=/deleteAccount/{accountId}
path.updateAccount=/updateAccount/{accountId}

url.playerManager=http://player:8082
path.playerManager=/setPlaying/
path.changeBoolean=/changeBool

mongoBase=http://mongoclient:8085/accounts
mongoGetAll=/getAccounts
mongoGetById=/getAccountById/
mongoUpdate=/updateAccount/
mongoDelete=/deleteAccount/